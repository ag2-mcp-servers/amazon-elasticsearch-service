# generated by fastapi-codegen:
#   filename:  openapi.yaml
#   timestamp: 2025-06-28T11:24:32+00:00

from __future__ import annotations

from datetime import datetime
from enum import Enum
from typing import Any, Dict, List, Optional

from pydantic import BaseModel, ConfigDict, Field, RootModel, SecretStr, conint, constr


class ARN(RootModel[str]):
    root: str = Field(
        ...,
        description='The Amazon Resource Name (ARN) of the Elasticsearch domain. See <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?Using_Identifiers.html" target="_blank">Identifiers for IAM Entities</a> in <i>Using AWS Identity and Access Management</i> for more information.',
    )


class AWSAccount(RootModel[constr(pattern=r'^[0-9]+$')]):
    root: constr(pattern=r'^[0-9]+$')


class AcceptInboundCrossClusterSearchConnectionRequest(BaseModel):
    pass


class AccessDeniedException(RootModel[Any]):
    root: Any


class AssociatePackageRequest(BaseModel):
    pass


class AuthorizeVpcEndpointAccessRequest(BaseModel):
    Account: AWSAccount


class AutoTuneDate(RootModel[datetime]):
    root: datetime = Field(
        ...,
        description='Specifies timestamp for the Auto-Tune action scheduled for the domain. ',
    )


class AutoTuneDesiredState(Enum):
    ENABLED = 'ENABLED'
    DISABLED = 'DISABLED'


class AutoTuneState(Enum):
    ENABLED = 'ENABLED'
    DISABLED = 'DISABLED'
    ENABLE_IN_PROGRESS = 'ENABLE_IN_PROGRESS'
    DISABLE_IN_PROGRESS = 'DISABLE_IN_PROGRESS'
    DISABLED_AND_ROLLBACK_SCHEDULED = 'DISABLED_AND_ROLLBACK_SCHEDULED'
    DISABLED_AND_ROLLBACK_IN_PROGRESS = 'DISABLED_AND_ROLLBACK_IN_PROGRESS'
    DISABLED_AND_ROLLBACK_COMPLETE = 'DISABLED_AND_ROLLBACK_COMPLETE'
    DISABLED_AND_ROLLBACK_ERROR = 'DISABLED_AND_ROLLBACK_ERROR'
    ERROR = 'ERROR'


class AutoTuneType(Enum):
    SCHEDULED_ACTION = 'SCHEDULED_ACTION'


class BackendRole(RootModel[constr(min_length=1, max_length=256)]):
    root: constr(min_length=1, max_length=256)


class BaseException(RootModel[Any]):
    root: Any


class Boolean(RootModel[bool]):
    root: bool


class ChangeProgressStageName(RootModel[constr(min_length=1, max_length=64)]):
    root: constr(min_length=1, max_length=64)


class ChangeProgressStageStatus(RootModel[constr(min_length=1, max_length=256)]):
    root: constr(min_length=1, max_length=256)


class ClientToken(RootModel[constr(min_length=1, max_length=64)]):
    root: constr(min_length=1, max_length=64)


class CloudWatchLogsLogGroupArn(RootModel[str]):
    root: str = Field(
        ...,
        description='ARN of the Cloudwatch log group to which log needs to be published.',
    )


class ColdStorageOptions(BaseModel):
    Enabled: Boolean


class CommitMessage(RootModel[constr(max_length=160)]):
    root: constr(max_length=160)


class ConflictException(RootModel[Any]):
    root: Any


class ConnectionAlias(RootModel[constr(max_length=20)]):
    root: constr(max_length=20)


class CreatedAt(RootModel[datetime]):
    root: datetime


class CrossClusterSearchConnectionId(RootModel[str]):
    root: str


class CrossClusterSearchConnectionStatusMessage(RootModel[str]):
    root: str


class DeleteElasticsearchDomainRequest(BaseModel):
    pass


class DeleteInboundCrossClusterSearchConnectionRequest(BaseModel):
    pass


class DeleteOutboundCrossClusterSearchConnectionRequest(BaseModel):
    pass


class DeletePackageRequest(BaseModel):
    pass


class DeleteVpcEndpointRequest(BaseModel):
    pass


class DeploymentCloseDateTimeStamp(RootModel[datetime]):
    root: datetime


class DeploymentStatus(Enum):
    PENDING_UPDATE = 'PENDING_UPDATE'
    IN_PROGRESS = 'IN_PROGRESS'
    COMPLETED = 'COMPLETED'
    NOT_ELIGIBLE = 'NOT_ELIGIBLE'
    ELIGIBLE = 'ELIGIBLE'


class DeploymentType(RootModel[constr(min_length=2, max_length=128)]):
    root: constr(min_length=2, max_length=128)


class DescribeDomainChangeProgressRequest(BaseModel):
    pass


class DescribeElasticsearchDomainConfigRequest(BaseModel):
    pass


class DescribeElasticsearchDomainRequest(BaseModel):
    pass


class DescribeElasticsearchInstanceTypeLimitsRequest(BaseModel):
    pass


class DescribePackagesFilterName(Enum):
    PackageID = 'PackageID'
    PackageName = 'PackageName'
    PackageStatus = 'PackageStatus'


class DescribePackagesFilterValue(
    RootModel[constr(pattern=r'^[0-9a-zA-Z\*\.\\/\?-]*$')]
):
    root: constr(pattern=r'^[0-9a-zA-Z\*\.\\/\?-]*$')


class DescribePackagesFilterValues(RootModel[List[DescribePackagesFilterValue]]):
    root: List[DescribePackagesFilterValue]


class DescribeReservedElasticsearchInstanceOfferingsRequest(BaseModel):
    pass


class DescribeReservedElasticsearchInstancesRequest(BaseModel):
    pass


class Description(RootModel[str]):
    root: str


class DisableTimestamp(RootModel[datetime]):
    root: datetime


class DisabledOperationException(RootModel[Any]):
    root: Any


class DissociatePackageRequest(BaseModel):
    pass


class DomainArn(
    RootModel[
        constr(
            pattern=r'arn:aws[a-z\-]*:[a-z]+:[a-z0-9\-]+:[0-9]+:domain\/[a-z0-9\-]+',
            min_length=1,
            max_length=512,
        )
    ]
):
    root: constr(
        pattern=r'arn:aws[a-z\-]*:[a-z]+:[a-z0-9\-]+:[0-9]+:domain\/[a-z0-9\-]+',
        min_length=1,
        max_length=512,
    )


class DomainId(RootModel[constr(min_length=1, max_length=64)]):
    root: constr(min_length=1, max_length=64) = Field(
        ..., description='Unique identifier for an Elasticsearch domain.'
    )


class DomainName(
    RootModel[constr(pattern=r'[a-z][a-z0-9\-]+', min_length=3, max_length=28)]
):
    root: constr(pattern=r'[a-z][a-z0-9\-]+', min_length=3, max_length=28) = Field(
        ...,
        description='The name of an Elasticsearch domain. Domain names are unique across the domains owned by an account within an AWS region. Domain names start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen).',
    )


class DomainNameFqdn(
    RootModel[
        constr(
            pattern=r'^(((?!-)[A-Za-z0-9-]{0,62}[A-Za-z0-9])\.)+((?!-)[A-Za-z0-9-]{1,62}[A-Za-z0-9])$',
            min_length=1,
            max_length=255,
        )
    ]
):
    model_config = ConfigDict(
        regex_engine="python-re",
    )
    root: constr(
        pattern=r'^(((?!-)[A-Za-z0-9-]{0,62}[A-Za-z0-9])\.)+((?!-)[A-Za-z0-9-]{1,62}[A-Za-z0-9])$',
        min_length=1,
        max_length=255,
    )


class DomainNameList(RootModel[List[DomainName]]):
    root: List[DomainName] = Field(
        ..., description='A list of Elasticsearch domain names.'
    )


class DomainPackageStatus(Enum):
    ASSOCIATING = 'ASSOCIATING'
    ASSOCIATION_FAILED = 'ASSOCIATION_FAILED'
    ACTIVE = 'ACTIVE'
    DISSOCIATING = 'DISSOCIATING'
    DISSOCIATION_FAILED = 'DISSOCIATION_FAILED'


class Double(RootModel[float]):
    root: float


class DryRun(RootModel[bool]):
    root: bool


class DurationValue(RootModel[conint(ge=1, le=24)]):
    root: conint(ge=1, le=24) = Field(
        ...,
        description=' Integer to specify the value of a maintenance schedule duration. See the <a href="https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/auto-tune.html" target="_blank">Developer Guide</a> for more information.',
    )


class ESPartitionInstanceType(Enum):
    m3_medium_elasticsearch = 'm3.medium.elasticsearch'
    m3_large_elasticsearch = 'm3.large.elasticsearch'
    m3_xlarge_elasticsearch = 'm3.xlarge.elasticsearch'
    m3_2xlarge_elasticsearch = 'm3.2xlarge.elasticsearch'
    m4_large_elasticsearch = 'm4.large.elasticsearch'
    m4_xlarge_elasticsearch = 'm4.xlarge.elasticsearch'
    m4_2xlarge_elasticsearch = 'm4.2xlarge.elasticsearch'
    m4_4xlarge_elasticsearch = 'm4.4xlarge.elasticsearch'
    m4_10xlarge_elasticsearch = 'm4.10xlarge.elasticsearch'
    m5_large_elasticsearch = 'm5.large.elasticsearch'
    m5_xlarge_elasticsearch = 'm5.xlarge.elasticsearch'
    m5_2xlarge_elasticsearch = 'm5.2xlarge.elasticsearch'
    m5_4xlarge_elasticsearch = 'm5.4xlarge.elasticsearch'
    m5_12xlarge_elasticsearch = 'm5.12xlarge.elasticsearch'
    r5_large_elasticsearch = 'r5.large.elasticsearch'
    r5_xlarge_elasticsearch = 'r5.xlarge.elasticsearch'
    r5_2xlarge_elasticsearch = 'r5.2xlarge.elasticsearch'
    r5_4xlarge_elasticsearch = 'r5.4xlarge.elasticsearch'
    r5_12xlarge_elasticsearch = 'r5.12xlarge.elasticsearch'
    c5_large_elasticsearch = 'c5.large.elasticsearch'
    c5_xlarge_elasticsearch = 'c5.xlarge.elasticsearch'
    c5_2xlarge_elasticsearch = 'c5.2xlarge.elasticsearch'
    c5_4xlarge_elasticsearch = 'c5.4xlarge.elasticsearch'
    c5_9xlarge_elasticsearch = 'c5.9xlarge.elasticsearch'
    c5_18xlarge_elasticsearch = 'c5.18xlarge.elasticsearch'
    ultrawarm1_medium_elasticsearch = 'ultrawarm1.medium.elasticsearch'
    ultrawarm1_large_elasticsearch = 'ultrawarm1.large.elasticsearch'
    t2_micro_elasticsearch = 't2.micro.elasticsearch'
    t2_small_elasticsearch = 't2.small.elasticsearch'
    t2_medium_elasticsearch = 't2.medium.elasticsearch'
    r3_large_elasticsearch = 'r3.large.elasticsearch'
    r3_xlarge_elasticsearch = 'r3.xlarge.elasticsearch'
    r3_2xlarge_elasticsearch = 'r3.2xlarge.elasticsearch'
    r3_4xlarge_elasticsearch = 'r3.4xlarge.elasticsearch'
    r3_8xlarge_elasticsearch = 'r3.8xlarge.elasticsearch'
    i2_xlarge_elasticsearch = 'i2.xlarge.elasticsearch'
    i2_2xlarge_elasticsearch = 'i2.2xlarge.elasticsearch'
    d2_xlarge_elasticsearch = 'd2.xlarge.elasticsearch'
    d2_2xlarge_elasticsearch = 'd2.2xlarge.elasticsearch'
    d2_4xlarge_elasticsearch = 'd2.4xlarge.elasticsearch'
    d2_8xlarge_elasticsearch = 'd2.8xlarge.elasticsearch'
    c4_large_elasticsearch = 'c4.large.elasticsearch'
    c4_xlarge_elasticsearch = 'c4.xlarge.elasticsearch'
    c4_2xlarge_elasticsearch = 'c4.2xlarge.elasticsearch'
    c4_4xlarge_elasticsearch = 'c4.4xlarge.elasticsearch'
    c4_8xlarge_elasticsearch = 'c4.8xlarge.elasticsearch'
    r4_large_elasticsearch = 'r4.large.elasticsearch'
    r4_xlarge_elasticsearch = 'r4.xlarge.elasticsearch'
    r4_2xlarge_elasticsearch = 'r4.2xlarge.elasticsearch'
    r4_4xlarge_elasticsearch = 'r4.4xlarge.elasticsearch'
    r4_8xlarge_elasticsearch = 'r4.8xlarge.elasticsearch'
    r4_16xlarge_elasticsearch = 'r4.16xlarge.elasticsearch'
    i3_large_elasticsearch = 'i3.large.elasticsearch'
    i3_xlarge_elasticsearch = 'i3.xlarge.elasticsearch'
    i3_2xlarge_elasticsearch = 'i3.2xlarge.elasticsearch'
    i3_4xlarge_elasticsearch = 'i3.4xlarge.elasticsearch'
    i3_8xlarge_elasticsearch = 'i3.8xlarge.elasticsearch'
    i3_16xlarge_elasticsearch = 'i3.16xlarge.elasticsearch'


class ESWarmPartitionInstanceType(Enum):
    ultrawarm1_medium_elasticsearch = 'ultrawarm1.medium.elasticsearch'
    ultrawarm1_large_elasticsearch = 'ultrawarm1.large.elasticsearch'


class ElasticsearchInstanceTypeList(RootModel[List[ESPartitionInstanceType]]):
    root: List[ESPartitionInstanceType] = Field(
        ...,
        description=' List of instance types supported by Amazon Elasticsearch service. ',
    )


class ElasticsearchVersionString(
    RootModel[
        constr(pattern=r'^[0-9]{1}\.[0-9]{1,2}$|^OpenSearch_[0-9]{1,2}\.[0-9]{1,2}$')
    ]
):
    root: constr(pattern=r'^[0-9]{1}\.[0-9]{1,2}$|^OpenSearch_[0-9]{1,2}\.[0-9]{1,2}$')


class Endpoint(RootModel[constr(pattern=r'^[A-Za-z0-9\-\.]+$')]):
    root: constr(pattern=r'^[A-Za-z0-9\-\.]+$')


class EngineType(Enum):
    OpenSearch = 'OpenSearch'
    Elasticsearch = 'Elasticsearch'


class ErrorMessage(RootModel[str]):
    root: str


class ErrorType(RootModel[str]):
    root: str


class GUID(
    RootModel[
        constr(
            pattern=r'\p{XDigit}{8}-\p{XDigit}{4}-\p{XDigit}{4}-\p{XDigit}{4}-\p{XDigit}{12}'
        )
    ]
):
    root: constr(
        pattern=r'\p{XDigit}{8}-\p{XDigit}{4}-\p{XDigit}{4}-\p{XDigit}{4}-\p{XDigit}{12}'
    )


class GetCompatibleElasticsearchVersionsRequest(BaseModel):
    pass


class GetPackageVersionHistoryRequest(BaseModel):
    pass


class GetUpgradeHistoryRequest(BaseModel):
    pass


class GetUpgradeStatusRequest(BaseModel):
    pass


class IdentityPoolId(
    RootModel[constr(pattern=r'[\w-]+:[0-9a-f-]+', min_length=1, max_length=55)]
):
    root: constr(pattern=r'[\w-]+:[0-9a-f-]+', min_length=1, max_length=55)


class InboundCrossClusterSearchConnectionStatusCode(Enum):
    PENDING_ACCEPTANCE = 'PENDING_ACCEPTANCE'
    APPROVED = 'APPROVED'
    REJECTING = 'REJECTING'
    REJECTED = 'REJECTED'
    DELETING = 'DELETING'
    DELETED = 'DELETED'


class InstanceCount(RootModel[conint(ge=1)]):
    root: conint(ge=1) = Field(
        ...,
        description='Specifies the number of EC2 instances in the Elasticsearch domain.',
    )


class InstanceRole(RootModel[str]):
    root: str


class Integer(RootModel[int]):
    root: int


class IntegerClass(RootModel[int]):
    root: int


class InternalException(RootModel[Any]):
    root: Any


class InvalidPaginationTokenException(RootModel[Any]):
    root: Any


class InvalidTypeException(RootModel[Any]):
    root: Any


class Issue(RootModel[str]):
    root: str


class Issues(RootModel[List[Issue]]):
    root: List[Issue]


class KmsKeyId(RootModel[constr(min_length=1, max_length=500)]):
    root: constr(min_length=1, max_length=500)


class LastUpdated(RootModel[datetime]):
    root: datetime


class LimitExceededException(RootModel[Any]):
    root: Any


class LimitName(RootModel[str]):
    root: str


class LimitValue(RootModel[str]):
    root: str


class LimitValueList(RootModel[List[LimitValue]]):
    root: List[LimitValue]


class ListDomainNamesRequest(BaseModel):
    pass


class ListDomainsForPackageRequest(BaseModel):
    pass


class ListElasticsearchInstanceTypesRequest(BaseModel):
    pass


class ListElasticsearchVersionsRequest(BaseModel):
    pass


class ListPackagesForDomainRequest(BaseModel):
    pass


class ListTagsRequest(BaseModel):
    pass


class ListVpcEndpointAccessRequest(BaseModel):
    pass


class ListVpcEndpointsForDomainRequest(BaseModel):
    pass


class ListVpcEndpointsRequest(BaseModel):
    pass


class LogPublishingOption(BaseModel):
    CloudWatchLogsLogGroupArn_1: Optional[CloudWatchLogsLogGroupArn] = Field(
        None, alias='CloudWatchLogsLogGroupArn'
    )
    Enabled: Optional[Boolean] = None


class LogPublishingOptions(RootModel[Optional[Dict[str, LogPublishingOption]]]):
    root: Optional[Dict[str, LogPublishingOption]] = None


class LogType(Enum):
    INDEX_SLOW_LOGS = 'INDEX_SLOW_LOGS'
    SEARCH_SLOW_LOGS = 'SEARCH_SLOW_LOGS'
    ES_APPLICATION_LOGS = 'ES_APPLICATION_LOGS'
    AUDIT_LOGS = 'AUDIT_LOGS'


class MaxResults(RootModel[conint(le=100)]):
    root: conint(le=100) = Field(
        ..., description=' Set this value to limit the number of results returned. '
    )


class MaximumInstanceCount(RootModel[int]):
    root: int = Field(
        ...,
        description=' Maximum number of Instances that can be instantiated for given InstanceType. ',
    )


class Message(RootModel[constr(min_length=0, max_length=1024)]):
    root: constr(min_length=0, max_length=1024)


class MinimumInstanceCount(RootModel[int]):
    root: int = Field(
        ...,
        description=' Minimum number of Instances that can be instantiated for given InstanceType. ',
    )


class NextToken(RootModel[str]):
    root: str = Field(
        ...,
        description=' Paginated APIs accepts NextToken input to returns next page results and provides a NextToken output in the response which can be used by the client to retrieve more results. ',
    )


class NodeToNodeEncryptionOptions(BaseModel):
    Enabled: Optional[Boolean] = None


class NonEmptyString(RootModel[constr(min_length=1)]):
    root: constr(min_length=1)


class OptionState(Enum):
    RequiresIndexDocuments = 'RequiresIndexDocuments'
    Processing = 'Processing'
    Active = 'Active'


class OutboundCrossClusterSearchConnectionStatusCode(Enum):
    PENDING_ACCEPTANCE = 'PENDING_ACCEPTANCE'
    VALIDATING = 'VALIDATING'
    VALIDATION_FAILED = 'VALIDATION_FAILED'
    PROVISIONING = 'PROVISIONING'
    ACTIVE = 'ACTIVE'
    REJECTED = 'REJECTED'
    DELETING = 'DELETING'
    DELETED = 'DELETED'


class OverallChangeStatus(Enum):
    PENDING = 'PENDING'
    PROCESSING = 'PROCESSING'
    COMPLETED = 'COMPLETED'
    FAILED = 'FAILED'


class OwnerId(RootModel[constr(min_length=12, max_length=12)]):
    root: constr(min_length=12, max_length=12)


class PackageDescription(RootModel[constr(max_length=1024)]):
    root: constr(max_length=1024)


class PackageID(RootModel[str]):
    root: str


class PackageName(
    RootModel[constr(pattern=r'[a-z][a-z0-9\-]+', min_length=3, max_length=28)]
):
    root: constr(pattern=r'[a-z][a-z0-9\-]+', min_length=3, max_length=28)


class PackageStatus(Enum):
    COPYING = 'COPYING'
    COPY_FAILED = 'COPY_FAILED'
    VALIDATING = 'VALIDATING'
    VALIDATION_FAILED = 'VALIDATION_FAILED'
    AVAILABLE = 'AVAILABLE'
    DELETING = 'DELETING'
    DELETED = 'DELETED'
    DELETE_FAILED = 'DELETE_FAILED'


class PackageType(Enum):
    TXT_DICTIONARY = 'TXT-DICTIONARY'


class PackageVersion(RootModel[str]):
    root: str


class PackageVersionHistory(BaseModel):
    CommitMessage_1: Optional[CommitMessage] = Field(None, alias='CommitMessage')
    CreatedAt_1: Optional[CreatedAt] = Field(None, alias='CreatedAt')
    PackageVersion_1: Optional[PackageVersion] = Field(None, alias='PackageVersion')


class PackageVersionHistoryList(RootModel[List[PackageVersionHistory]]):
    root: List[PackageVersionHistory]


class Password(RootModel[SecretStr]):
    root: SecretStr


class PolicyDocument(RootModel[str]):
    root: str = Field(
        ...,
        description='Access policy rules for an Elasticsearch domain service endpoints. For more information, see <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createupdatedomains.html#es-createdomain-configure-access-policies" target="_blank">Configuring Access Policies</a> in the <i>Amazon Elasticsearch Service Developer Guide</i>. The maximum size of a policy document is 100 KB.',
    )


class PrincipalType(Enum):
    AWS_ACCOUNT = 'AWS_ACCOUNT'
    AWS_SERVICE = 'AWS_SERVICE'


class ReferencePath(RootModel[str]):
    root: str


class Region(RootModel[str]):
    root: str


class RejectInboundCrossClusterSearchConnectionRequest(BaseModel):
    pass


class ReservationToken(RootModel[constr(min_length=5, max_length=64)]):
    root: constr(min_length=5, max_length=64)


class ReservedElasticsearchInstancePaymentOption(Enum):
    ALL_UPFRONT = 'ALL_UPFRONT'
    PARTIAL_UPFRONT = 'PARTIAL_UPFRONT'
    NO_UPFRONT = 'NO_UPFRONT'


class ResourceAlreadyExistsException(RootModel[Any]):
    root: Any


class ResourceNotFoundException(RootModel[Any]):
    root: Any


class RevokeVpcEndpointAccessRequest(BaseModel):
    Account: AWSAccount


class RevokeVpcEndpointAccessResponse(BaseModel):
    pass


class RoleArn(RootModel[constr(min_length=20, max_length=2048)]):
    root: constr(min_length=20, max_length=2048)


class RollbackOnDisable(Enum):
    NO_ROLLBACK = 'NO_ROLLBACK'
    DEFAULT_ROLLBACK = 'DEFAULT_ROLLBACK'


class S3BucketName(RootModel[constr(min_length=3, max_length=63)]):
    root: constr(min_length=3, max_length=63)


class S3Key(RootModel[str]):
    root: str


class SAMLEntityId(RootModel[constr(min_length=8, max_length=512)]):
    root: constr(min_length=8, max_length=512)


class SAMLMetadata(RootModel[constr(min_length=1, max_length=1048576)]):
    root: constr(min_length=1, max_length=1048576)


class ScheduledAutoTuneActionType(Enum):
    JVM_HEAP_SIZE_TUNING = 'JVM_HEAP_SIZE_TUNING'
    JVM_YOUNG_GEN_TUNING = 'JVM_YOUNG_GEN_TUNING'


class ScheduledAutoTuneDescription(RootModel[str]):
    root: str = Field(..., description='Specifies Auto-Tune action description. ')


class ScheduledAutoTuneSeverityType(Enum):
    LOW = 'LOW'
    MEDIUM = 'MEDIUM'
    HIGH = 'HIGH'


class ServiceUrl(RootModel[str]):
    root: str = Field(
        ...,
        description='The endpoint to which service requests are submitted. For example, <code>search-imdb-movies-oopcnjfn6ugofer3zx5iadxxca.eu-west-1.es.amazonaws.com</code> or <code>doc-imdb-movies-oopcnjfn6ugofer3zx5iadxxca.eu-west-1.es.amazonaws.com</code>.',
    )


class SnapshotOptions(BaseModel):
    AutomatedSnapshotStartHour: Optional[IntegerClass] = None


class StartAt(RootModel[datetime]):
    root: datetime


class StartElasticsearchServiceSoftwareUpdateRequest(BaseModel):
    DomainName_1: DomainName = Field(..., alias='DomainName')


class StartTimestamp(RootModel[datetime]):
    root: datetime


class StorageSubTypeName(RootModel[str]):
    root: str = Field(
        ...,
        description=' SubType of the given storage type. List of available sub-storage options: For "instance" storageType we wont have any storageSubType, in case of "ebs" storageType we will have following valid storageSubTypes <ol> <li>standard</li> <li>gp2</li> <li>gp3</li> <li>io1</li> </ol> Refer <code><a>VolumeType</a></code> for more information regarding above EBS storage options. ',
    )


class StorageTypeLimit(BaseModel):
    LimitName_1: Optional[LimitName] = Field(None, alias='LimitName')
    LimitValues: Optional[LimitValueList] = None


class StorageTypeLimitList(RootModel[List[StorageTypeLimit]]):
    root: List[StorageTypeLimit]


class StorageTypeName(RootModel[str]):
    root: str = Field(
        ...,
        description=' Type of the storage. List of available storage options: <ol> <li>instance</li> Inbuilt storage available for the given Instance <li>ebs</li> Elastic block storage that would be attached to the given Instance </ol> ',
    )


class String(RootModel[str]):
    root: str


class StringList(RootModel[List[String]]):
    root: List[String]


class TLSSecurityPolicy(Enum):
    Policy_Min_TLS_1_0_2019_07 = 'Policy-Min-TLS-1-0-2019-07'
    Policy_Min_TLS_1_2_2019_07 = 'Policy-Min-TLS-1-2-2019-07'


class TagKey(RootModel[constr(min_length=1, max_length=128)]):
    root: constr(min_length=1, max_length=128) = Field(
        ...,
        description='A string of length from 1 to 128 characters that specifies the key for a Tag. Tag keys must be unique for the Elasticsearch domain to which they are attached.',
    )


class TagValue(RootModel[constr(min_length=0, max_length=256)]):
    root: constr(min_length=0, max_length=256) = Field(
        ...,
        description='A string of length from 0 to 256 characters that specifies the value for a Tag. Tag values can be null and do not have to be unique in a tag set.',
    )


class TimeUnit(Enum):
    HOURS = 'HOURS'


class TotalNumberOfStages(RootModel[int]):
    root: int


class UIntValue(RootModel[conint(ge=0)]):
    root: conint(ge=0)


class UpdateTimestamp(RootModel[datetime]):
    root: datetime


class UpgradeElasticsearchDomainRequest(BaseModel):
    DomainName_1: DomainName = Field(..., alias='DomainName')
    PerformCheckOnly: Optional[Boolean] = None
    TargetVersion: ElasticsearchVersionString


class UpgradeName(RootModel[str]):
    root: str


class UpgradeStatus(Enum):
    IN_PROGRESS = 'IN_PROGRESS'
    SUCCEEDED = 'SUCCEEDED'
    SUCCEEDED_WITH_ISSUES = 'SUCCEEDED_WITH_ISSUES'
    FAILED = 'FAILED'


class UpgradeStep(Enum):
    PRE_UPGRADE_CHECK = 'PRE_UPGRADE_CHECK'
    SNAPSHOT = 'SNAPSHOT'
    UPGRADE = 'UPGRADE'


class UpgradeStepItem(BaseModel):
    Issues_1: Optional[Issues] = Field(None, alias='Issues')
    ProgressPercent: Optional[Double] = None
    UpgradeStep_1: Optional[UpgradeStep] = Field(None, alias='UpgradeStep')
    UpgradeStepStatus: Optional[UpgradeStatus] = None


class UpgradeStepsList(RootModel[List[UpgradeStepItem]]):
    root: List[UpgradeStepItem]


class UserPoolId(
    RootModel[constr(pattern=r'[\w-]+_[0-9a-zA-Z]+', min_length=1, max_length=55)]
):
    root: constr(pattern=r'[\w-]+_[0-9a-zA-Z]+', min_length=1, max_length=55)


class Username(RootModel[SecretStr]):
    root: SecretStr


class VPCDerivedInfo(BaseModel):
    AvailabilityZones: Optional[StringList] = None
    SecurityGroupIds: Optional[StringList] = None
    SubnetIds: Optional[StringList] = None
    VPCId: Optional[String] = None


class VPCOptions(BaseModel):
    SecurityGroupIds: Optional[StringList] = None
    SubnetIds: Optional[StringList] = None


class ValidationException(RootModel[Any]):
    root: Any


class ValueStringList(RootModel[List[NonEmptyString]]):
    root: List[NonEmptyString] = Field(..., min_length=1)


class VolumeType(Enum):
    standard = 'standard'
    gp2 = 'gp2'
    io1 = 'io1'
    gp3 = 'gp3'


class VpcEndpointErrorCode(Enum):
    ENDPOINT_NOT_FOUND = 'ENDPOINT_NOT_FOUND'
    SERVER_ERROR = 'SERVER_ERROR'


class VpcEndpointId(
    RootModel[constr(pattern=r'^aos-[a-zA-Z0-9]*$', min_length=5, max_length=256)]
):
    root: constr(pattern=r'^aos-[a-zA-Z0-9]*$', min_length=5, max_length=256)


class VpcEndpointIdList(RootModel[List[VpcEndpointId]]):
    root: List[VpcEndpointId]


class VpcEndpointStatus(Enum):
    CREATING = 'CREATING'
    CREATE_FAILED = 'CREATE_FAILED'
    ACTIVE = 'ACTIVE'
    UPDATING = 'UPDATING'
    UPDATE_FAILED = 'UPDATE_FAILED'
    DELETING = 'DELETING'
    DELETE_FAILED = 'DELETE_FAILED'


class VpcEndpointSummary(BaseModel):
    DomainArn_1: Optional[DomainArn] = Field(None, alias='DomainArn')
    Status: Optional[VpcEndpointStatus] = None
    VpcEndpointId_1: Optional[VpcEndpointId] = Field(None, alias='VpcEndpointId')
    VpcEndpointOwner: Optional[String] = None


class VpcEndpointSummaryList(RootModel[List[VpcEndpointSummary]]):
    root: List[VpcEndpointSummary]


class ZoneAwarenessConfig(BaseModel):
    AvailabilityZoneCount: Optional[IntegerClass] = None


class DestinationDomainInfo(BaseModel):
    DomainName_1: Optional[DomainName] = Field(None, alias='DomainName')
    OwnerId_1: Optional[OwnerId] = Field(None, alias='OwnerId')
    Region_1: Optional[Region] = Field(None, alias='Region')


class SourceDomainInfo(BaseModel):
    DomainName_1: Optional[DomainName] = Field(None, alias='DomainName')
    OwnerId_1: Optional[OwnerId] = Field(None, alias='OwnerId')
    Region_1: Optional[Region] = Field(None, alias='Region')


class Field20150101EsCcsOutboundConnectionPostRequest(BaseModel):
    ConnectionAlias: constr(max_length=20) = Field(
        ...,
        description='Specifies the connection alias that will be used by the customer for this connection.',
    )
    DestinationDomainInfo_1: DestinationDomainInfo = Field(
        ...,
        alias='DestinationDomainInfo',
        description='Specifies the <code><a>DomainInformation</a></code> for the destination Elasticsearch domain.',
    )
    SourceDomainInfo_1: SourceDomainInfo = Field(
        ...,
        alias='SourceDomainInfo',
        description='Specifies the <code><a>DomainInformation</a></code> for the source Elasticsearch domain.',
    )


class CognitoOptions(BaseModel):
    Enabled: Optional[Boolean] = None
    IdentityPoolId_1: Optional[IdentityPoolId] = Field(None, alias='IdentityPoolId')
    RoleArn_1: Optional[RoleArn] = Field(None, alias='RoleArn')
    UserPoolId_1: Optional[UserPoolId] = Field(None, alias='UserPoolId')


class DomainEndpointOptions(BaseModel):
    CustomEndpoint: Optional[DomainNameFqdn] = None
    CustomEndpointCertificateArn: Optional[ARN] = None
    CustomEndpointEnabled: Optional[Boolean] = None
    EnforceHTTPS: Optional[Boolean] = None
    TLSSecurityPolicy_1: Optional[TLSSecurityPolicy] = Field(
        None, alias='TLSSecurityPolicy'
    )


class EBSOptions(BaseModel):
    EBSEnabled: Optional[Boolean] = None
    Iops: Optional[IntegerClass] = None
    Throughput: Optional[IntegerClass] = None
    VolumeSize: Optional[IntegerClass] = None
    VolumeType_1: Optional[VolumeType] = Field(None, alias='VolumeType')


class ElasticsearchClusterConfig(BaseModel):
    ColdStorageOptions_1: Optional[ColdStorageOptions] = Field(
        None, alias='ColdStorageOptions'
    )
    DedicatedMasterCount: Optional[IntegerClass] = None
    DedicatedMasterEnabled: Optional[Boolean] = None
    DedicatedMasterType: Optional[ESPartitionInstanceType] = None
    InstanceCount: Optional[IntegerClass] = None
    InstanceType: Optional[ESPartitionInstanceType] = None
    WarmCount: Optional[IntegerClass] = None
    WarmEnabled: Optional[Boolean] = None
    WarmType: Optional[ESWarmPartitionInstanceType] = None
    ZoneAwarenessConfig_1: Optional[ZoneAwarenessConfig] = Field(
        None, alias='ZoneAwarenessConfig'
    )
    ZoneAwarenessEnabled: Optional[Boolean] = None


class EncryptionAtRestOptions(BaseModel):
    Enabled: Optional[Boolean] = None
    KmsKeyId_1: Optional[KmsKeyId] = Field(None, alias='KmsKeyId')


class Field20150101EsDomainInfoPostRequest(BaseModel):
    DomainNames: List[DomainName] = Field(
        ..., description='A list of Elasticsearch domain names.'
    )


class Field20150101EsDomainDomainNameAuthorizeVpcEndpointAccessPostRequest(BaseModel):
    Account: constr(pattern=r'^[0-9]+$') = Field(
        ..., description='The account ID to grant access to.'
    )


class Field20150101EsDomainDomainNameAutoTunesGetRequest(BaseModel):
    MaxResults: Optional[conint(le=100)] = Field(
        None, description=' Set this value to limit the number of results returned. '
    )
    NextToken: Optional[str] = Field(
        None,
        description=' Paginated APIs accepts NextToken input to returns next page results and provides a NextToken output in the response which can be used by the client to retrieve more results. ',
    )


class Field20150101EsDomainDomainNameRevokeVpcEndpointAccessPostRequest(BaseModel):
    Account: constr(pattern=r'^[0-9]+$') = Field(
        ..., description='The account ID to revoke access from.'
    )


class InstanceType(Enum):
    m3_medium_elasticsearch = 'm3.medium.elasticsearch'
    m3_large_elasticsearch = 'm3.large.elasticsearch'
    m3_xlarge_elasticsearch = 'm3.xlarge.elasticsearch'
    m3_2xlarge_elasticsearch = 'm3.2xlarge.elasticsearch'
    m4_large_elasticsearch = 'm4.large.elasticsearch'
    m4_xlarge_elasticsearch = 'm4.xlarge.elasticsearch'
    m4_2xlarge_elasticsearch = 'm4.2xlarge.elasticsearch'
    m4_4xlarge_elasticsearch = 'm4.4xlarge.elasticsearch'
    m4_10xlarge_elasticsearch = 'm4.10xlarge.elasticsearch'
    m5_large_elasticsearch = 'm5.large.elasticsearch'
    m5_xlarge_elasticsearch = 'm5.xlarge.elasticsearch'
    m5_2xlarge_elasticsearch = 'm5.2xlarge.elasticsearch'
    m5_4xlarge_elasticsearch = 'm5.4xlarge.elasticsearch'
    m5_12xlarge_elasticsearch = 'm5.12xlarge.elasticsearch'
    r5_large_elasticsearch = 'r5.large.elasticsearch'
    r5_xlarge_elasticsearch = 'r5.xlarge.elasticsearch'
    r5_2xlarge_elasticsearch = 'r5.2xlarge.elasticsearch'
    r5_4xlarge_elasticsearch = 'r5.4xlarge.elasticsearch'
    r5_12xlarge_elasticsearch = 'r5.12xlarge.elasticsearch'
    c5_large_elasticsearch = 'c5.large.elasticsearch'
    c5_xlarge_elasticsearch = 'c5.xlarge.elasticsearch'
    c5_2xlarge_elasticsearch = 'c5.2xlarge.elasticsearch'
    c5_4xlarge_elasticsearch = 'c5.4xlarge.elasticsearch'
    c5_9xlarge_elasticsearch = 'c5.9xlarge.elasticsearch'
    c5_18xlarge_elasticsearch = 'c5.18xlarge.elasticsearch'
    ultrawarm1_medium_elasticsearch = 'ultrawarm1.medium.elasticsearch'
    ultrawarm1_large_elasticsearch = 'ultrawarm1.large.elasticsearch'
    t2_micro_elasticsearch = 't2.micro.elasticsearch'
    t2_small_elasticsearch = 't2.small.elasticsearch'
    t2_medium_elasticsearch = 't2.medium.elasticsearch'
    r3_large_elasticsearch = 'r3.large.elasticsearch'
    r3_xlarge_elasticsearch = 'r3.xlarge.elasticsearch'
    r3_2xlarge_elasticsearch = 'r3.2xlarge.elasticsearch'
    r3_4xlarge_elasticsearch = 'r3.4xlarge.elasticsearch'
    r3_8xlarge_elasticsearch = 'r3.8xlarge.elasticsearch'
    i2_xlarge_elasticsearch = 'i2.xlarge.elasticsearch'
    i2_2xlarge_elasticsearch = 'i2.2xlarge.elasticsearch'
    d2_xlarge_elasticsearch = 'd2.xlarge.elasticsearch'
    d2_2xlarge_elasticsearch = 'd2.2xlarge.elasticsearch'
    d2_4xlarge_elasticsearch = 'd2.4xlarge.elasticsearch'
    d2_8xlarge_elasticsearch = 'd2.8xlarge.elasticsearch'
    c4_large_elasticsearch = 'c4.large.elasticsearch'
    c4_xlarge_elasticsearch = 'c4.xlarge.elasticsearch'
    c4_2xlarge_elasticsearch = 'c4.2xlarge.elasticsearch'
    c4_4xlarge_elasticsearch = 'c4.4xlarge.elasticsearch'
    c4_8xlarge_elasticsearch = 'c4.8xlarge.elasticsearch'
    r4_large_elasticsearch = 'r4.large.elasticsearch'
    r4_xlarge_elasticsearch = 'r4.xlarge.elasticsearch'
    r4_2xlarge_elasticsearch = 'r4.2xlarge.elasticsearch'
    r4_4xlarge_elasticsearch = 'r4.4xlarge.elasticsearch'
    r4_8xlarge_elasticsearch = 'r4.8xlarge.elasticsearch'
    r4_16xlarge_elasticsearch = 'r4.16xlarge.elasticsearch'
    i3_large_elasticsearch = 'i3.large.elasticsearch'
    i3_xlarge_elasticsearch = 'i3.xlarge.elasticsearch'
    i3_2xlarge_elasticsearch = 'i3.2xlarge.elasticsearch'
    i3_4xlarge_elasticsearch = 'i3.4xlarge.elasticsearch'
    i3_8xlarge_elasticsearch = 'i3.8xlarge.elasticsearch'
    i3_16xlarge_elasticsearch = 'i3.16xlarge.elasticsearch'


class Field20150101EsPurchaseReservedInstanceOfferingPostRequest(BaseModel):
    InstanceCount: Optional[conint(ge=1)] = Field(
        None,
        description='Specifies the number of EC2 instances in the Elasticsearch domain.',
    )
    ReservationName: constr(min_length=5, max_length=64) = Field(
        ..., description='A customer-specified identifier to track this reservation.'
    )
    ReservedElasticsearchInstanceOfferingId: constr(
        pattern=r'\p{XDigit}{8}-\p{XDigit}{4}-\p{XDigit}{4}-\p{XDigit}{4}-\p{XDigit}{12}'
    ) = Field(
        ...,
        description='The ID of the reserved Elasticsearch instance offering to purchase.',
    )


class Field20150101EsServiceSoftwareUpdateCancelPostRequest(BaseModel):
    DomainName: constr(pattern=r'[a-z][a-z0-9\-]+', min_length=3, max_length=28) = (
        Field(
            ...,
            description='The name of an Elasticsearch domain. Domain names are unique across the domains owned by an account within an AWS region. Domain names start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen).',
        )
    )


class Field20150101EsServiceSoftwareUpdateStartPostRequest(BaseModel):
    DomainName: constr(pattern=r'[a-z][a-z0-9\-]+', min_length=3, max_length=28) = (
        Field(
            ...,
            description='The name of an Elasticsearch domain. Domain names are unique across the domains owned by an account within an AWS region. Domain names start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen).',
        )
    )


class Field20150101EsUpgradeDomainPostRequest(BaseModel):
    DomainName: constr(pattern=r'[a-z][a-z0-9\-]+', min_length=3, max_length=28) = (
        Field(
            ...,
            description='The name of an Elasticsearch domain. Domain names are unique across the domains owned by an account within an AWS region. Domain names start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen).',
        )
    )
    PerformCheckOnly: Optional[bool] = Field(
        None,
        description=' This flag, when set to True, indicates that an Upgrade Eligibility Check needs to be performed. This will not actually perform the Upgrade. ',
    )
    TargetVersion: constr(
        pattern=r'^[0-9]{1}\.[0-9]{1,2}$|^OpenSearch_[0-9]{1,2}\.[0-9]{1,2}$'
    ) = Field(
        ...,
        description='The version of Elasticsearch that you intend to upgrade the domain to.',
    )


class VpcOptions(BaseModel):
    SecurityGroupIds: Optional[StringList] = None
    SubnetIds: Optional[StringList] = None


class Field20150101EsVpcEndpointsPostRequest(BaseModel):
    ClientToken: Optional[constr(min_length=1, max_length=64)] = Field(
        None,
        description='Unique, case-sensitive identifier to ensure idempotency of the request.',
    )
    DomainArn: constr(
        pattern=r'arn:aws[a-z\-]*:[a-z]+:[a-z0-9\-]+:[0-9]+:domain\/[a-z0-9\-]+',
        min_length=1,
        max_length=512,
    ) = Field(
        ...,
        description='The Amazon Resource Name (ARN) of the domain to grant access to.',
    )
    VpcOptions_1: VpcOptions = Field(
        ...,
        alias='VpcOptions',
        description='Options to specify the subnets and security groups for VPC endpoint. For more information, see <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-vpc.html" target="_blank"> VPC Endpoints for Amazon Elasticsearch Service Domains</a>.',
    )


class Field20150101EsVpcEndpointsDescribePostRequest(BaseModel):
    VpcEndpointIds: List[VpcEndpointId] = Field(
        ...,
        description='The unique identifiers of the endpoints to get information about.',
    )


class Field20150101EsVpcEndpointsUpdatePostRequest(BaseModel):
    VpcEndpointId: constr(
        pattern=r'^aos-[a-zA-Z0-9]*$', min_length=5, max_length=256
    ) = Field(..., description='Unique identifier of the VPC endpoint to be updated.')
    VpcOptions_1: VpcOptions = Field(
        ...,
        alias='VpcOptions',
        description='Options to specify the subnets and security groups for VPC endpoint. For more information, see <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-vpc.html" target="_blank"> VPC Endpoints for Amazon Elasticsearch Service Domains</a>.',
    )


class PackageSource(BaseModel):
    S3BucketName_1: Optional[S3BucketName] = Field(None, alias='S3BucketName')
    S3Key_1: Optional[S3Key] = Field(None, alias='S3Key')


class Field20150101PackagesPostRequest(BaseModel):
    PackageDescription: Optional[constr(max_length=1024)] = Field(
        None, description='Description of the package.'
    )
    PackageName: constr(pattern=r'[a-z][a-z0-9\-]+', min_length=3, max_length=28) = (
        Field(..., description='Unique identifier for the package.')
    )
    PackageSource_1: PackageSource = Field(
        ...,
        alias='PackageSource',
        description='The S3 location for importing the package specified as <code>S3BucketName</code> and <code>S3Key</code>',
    )
    PackageType_1: PackageType = Field(
        ...,
        alias='PackageType',
        description='Type of package. Currently supports only TXT-DICTIONARY.',
    )


class Field20150101PackagesUpdatePostRequest(BaseModel):
    CommitMessage: Optional[constr(max_length=160)] = Field(
        None,
        description='An info message for the new version which will be shown as part of <code>GetPackageVersionHistoryResponse</code>.',
    )
    PackageDescription: Optional[constr(max_length=1024)] = Field(
        None, description='New description of the package.'
    )
    PackageID: str = Field(..., description='Unique identifier for the package.')
    PackageSource_1: PackageSource = Field(
        ...,
        alias='PackageSource',
        description='The S3 location for importing the package specified as <code>S3BucketName</code> and <code>S3Key</code>',
    )


class Field20150101TagsRemovalPostRequest(BaseModel):
    ARN: str = Field(
        ...,
        description='The Amazon Resource Name (ARN) of the Elasticsearch domain. See <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?Using_Identifiers.html" target="_blank">Identifiers for IAM Entities</a> in <i>Using AWS Identity and Access Management</i> for more information.',
    )
    TagKeys: List[String] = Field(
        ...,
        description='Specifies the <code>TagKey</code> list which you want to remove from the Elasticsearch domain.',
    )


class AdditionalLimit(BaseModel):
    LimitName_1: Optional[LimitName] = Field(None, alias='LimitName')
    LimitValues: Optional[LimitValueList] = None


class AdditionalLimitList(RootModel[List[AdditionalLimit]]):
    root: List[AdditionalLimit]


class AdvancedOptions(RootModel[Optional[Dict[str, String]]]):
    root: Optional[Dict[str, String]] = None


class AuthorizedPrincipal(BaseModel):
    Principal: Optional[String] = None
    PrincipalType_1: Optional[PrincipalType] = Field(None, alias='PrincipalType')


class AuthorizedPrincipalList(RootModel[List[AuthorizedPrincipal]]):
    root: List[AuthorizedPrincipal]


class AutoTuneOptionsOutput(BaseModel):
    ErrorMessage: Optional[String] = None
    State: Optional[AutoTuneState] = None


class AutoTuneStatus(BaseModel):
    CreationDate: UpdateTimestamp
    ErrorMessage: Optional[String] = None
    PendingDeletion: Optional[Boolean] = None
    State: AutoTuneState
    UpdateDate: UpdateTimestamp
    UpdateVersion: Optional[UIntValue] = None


class CancelElasticsearchServiceSoftwareUpdateRequest(BaseModel):
    DomainName_1: DomainName = Field(..., alias='DomainName')


class ChangeProgressDetails(BaseModel):
    ChangeId: Optional[GUID] = None
    Message_1: Optional[Message] = Field(None, alias='Message')


class ChangeProgressStage(BaseModel):
    Description_1: Optional[Description] = Field(None, alias='Description')
    LastUpdated_1: Optional[LastUpdated] = Field(None, alias='LastUpdated')
    Name: Optional[ChangeProgressStageName] = None
    Status: Optional[ChangeProgressStageStatus] = None


class ChangeProgressStageList(RootModel[List[ChangeProgressStage]]):
    root: List[ChangeProgressStage] = Field(
        ...,
        description='The list of progress stages of a specific domain configuration change.',
    )


class ChangeProgressStatusDetails(BaseModel):
    ChangeId: Optional[GUID] = None
    ChangeProgressStages: Optional[ChangeProgressStageList] = None
    CompletedProperties: Optional[StringList] = None
    PendingProperties: Optional[StringList] = None
    StartTime: Optional[UpdateTimestamp] = None
    Status: Optional[OverallChangeStatus] = None
    TotalNumberOfStages_1: Optional[TotalNumberOfStages] = Field(
        None, alias='TotalNumberOfStages'
    )


class CreateVpcEndpointRequest(BaseModel):
    ClientToken_1: Optional[ClientToken] = Field(None, alias='ClientToken')
    DomainArn_1: DomainArn = Field(..., alias='DomainArn')
    VpcOptions: VPCOptions


class DeleteVpcEndpointResponse(BaseModel):
    VpcEndpointSummary_1: VpcEndpointSummary = Field(..., alias='VpcEndpointSummary')


class DescribeDomainAutoTunesRequest(BaseModel):
    MaxResults_1: Optional[MaxResults] = Field(None, alias='MaxResults')
    NextToken_1: Optional[NextToken] = Field(None, alias='NextToken')


class DescribeDomainChangeProgressResponse(BaseModel):
    ChangeProgressStatus: Optional[ChangeProgressStatusDetails] = None


class DescribeElasticsearchDomainsRequest(BaseModel):
    DomainNames: DomainNameList


class DescribePackagesFilter(BaseModel):
    Name: Optional[DescribePackagesFilterName] = None
    Value: Optional[DescribePackagesFilterValues] = None


class DescribePackagesFilterList(RootModel[List[DescribePackagesFilter]]):
    root: List[DescribePackagesFilter] = Field(
        ...,
        description='A list of <code>DescribePackagesFilter</code> to filter the packages included in a <code>DescribePackages</code> response.',
    )


class DescribePackagesRequest(BaseModel):
    Filters: Optional[DescribePackagesFilterList] = None
    MaxResults_1: Optional[MaxResults] = Field(None, alias='MaxResults')
    NextToken_1: Optional[NextToken] = Field(None, alias='NextToken')


class DescribeVpcEndpointsRequest(BaseModel):
    VpcEndpointIds: VpcEndpointIdList


class DomainInfo(BaseModel):
    DomainName_1: Optional[DomainName] = Field(None, alias='DomainName')
    EngineType_1: Optional[EngineType] = Field(None, alias='EngineType')


class DomainInfoList(RootModel[List[DomainInfo]]):
    root: List[DomainInfo] = Field(
        ..., description=' Contains the list of Elasticsearch domain information.'
    )


class DomainInformation(BaseModel):
    DomainName_1: DomainName = Field(..., alias='DomainName')
    OwnerId_1: Optional[OwnerId] = Field(None, alias='OwnerId')
    Region_1: Optional[Region] = Field(None, alias='Region')


class DryRunResults(BaseModel):
    DeploymentType_1: Optional[DeploymentType] = Field(None, alias='DeploymentType')
    Message_1: Optional[Message] = Field(None, alias='Message')


class Duration(BaseModel):
    Unit: Optional[TimeUnit] = None
    Value: Optional[DurationValue] = None


class ElasticsearchVersionList(RootModel[List[ElasticsearchVersionString]]):
    root: List[ElasticsearchVersionString] = Field(
        ..., description='List of supported elastic search versions. '
    )


class EndpointsMap(RootModel[Optional[Dict[str, ServiceUrl]]]):
    root: Optional[Dict[str, ServiceUrl]] = None


class ErrorDetails(BaseModel):
    ErrorMessage_1: Optional[ErrorMessage] = Field(None, alias='ErrorMessage')
    ErrorType_1: Optional[ErrorType] = Field(None, alias='ErrorType')


class Filter(BaseModel):
    Name: Optional[NonEmptyString] = None
    Values: Optional[ValueStringList] = None


class FilterList(RootModel[List[Filter]]):
    root: List[Filter]


class GetPackageVersionHistoryResponse(BaseModel):
    NextToken: Optional[String] = None
    PackageID_1: Optional[PackageID] = Field(None, alias='PackageID')
    PackageVersionHistoryList_1: Optional[PackageVersionHistoryList] = Field(
        None, alias='PackageVersionHistoryList'
    )


class GetUpgradeStatusResponse(BaseModel):
    StepStatus: Optional[UpgradeStatus] = None
    UpgradeName_1: Optional[UpgradeName] = Field(None, alias='UpgradeName')
    UpgradeStep_1: Optional[UpgradeStep] = Field(None, alias='UpgradeStep')


class InboundCrossClusterSearchConnectionStatus(BaseModel):
    Message: Optional[CrossClusterSearchConnectionStatusMessage] = None
    StatusCode: Optional[InboundCrossClusterSearchConnectionStatusCode] = None


class InstanceCountLimits(BaseModel):
    MaximumInstanceCount_1: Optional[MaximumInstanceCount] = Field(
        None, alias='MaximumInstanceCount'
    )
    MinimumInstanceCount_1: Optional[MinimumInstanceCount] = Field(
        None, alias='MinimumInstanceCount'
    )


class InstanceLimits(BaseModel):
    InstanceCountLimits_1: Optional[InstanceCountLimits] = Field(
        None, alias='InstanceCountLimits'
    )


class ListDomainNamesResponse(BaseModel):
    DomainNames: Optional[DomainInfoList] = None


class ListElasticsearchInstanceTypesResponse(BaseModel):
    ElasticsearchInstanceTypes: Optional[ElasticsearchInstanceTypeList] = None
    NextToken_1: Optional[NextToken] = Field(None, alias='NextToken')


class ListElasticsearchVersionsResponse(BaseModel):
    ElasticsearchVersions: Optional[ElasticsearchVersionList] = None
    NextToken_1: Optional[NextToken] = Field(None, alias='NextToken')


class ListVpcEndpointAccessResponse(BaseModel):
    AuthorizedPrincipalList_1: AuthorizedPrincipalList = Field(
        ..., alias='AuthorizedPrincipalList'
    )
    NextToken_1: NextToken = Field(..., alias='NextToken')


class ListVpcEndpointsForDomainResponse(BaseModel):
    NextToken_1: NextToken = Field(..., alias='NextToken')
    VpcEndpointSummaryList_1: VpcEndpointSummaryList = Field(
        ..., alias='VpcEndpointSummaryList'
    )


class ListVpcEndpointsResponse(BaseModel):
    NextToken_1: NextToken = Field(..., alias='NextToken')
    VpcEndpointSummaryList_1: VpcEndpointSummaryList = Field(
        ..., alias='VpcEndpointSummaryList'
    )


class MasterUserOptions(BaseModel):
    MasterUserARN: Optional[ARN] = None
    MasterUserName: Optional[Username] = None
    MasterUserPassword: Optional[Password] = None


class OptionStatus(BaseModel):
    CreationDate: UpdateTimestamp
    PendingDeletion: Optional[Boolean] = None
    State: OptionState
    UpdateDate: UpdateTimestamp
    UpdateVersion: Optional[UIntValue] = None


class OutboundCrossClusterSearchConnectionStatus(BaseModel):
    Message: Optional[CrossClusterSearchConnectionStatusMessage] = None
    StatusCode: Optional[OutboundCrossClusterSearchConnectionStatusCode] = None


class PackageDetails(BaseModel):
    AvailablePackageVersion: Optional[PackageVersion] = None
    CreatedAt_1: Optional[CreatedAt] = Field(None, alias='CreatedAt')
    ErrorDetails_1: Optional[ErrorDetails] = Field(None, alias='ErrorDetails')
    LastUpdatedAt: Optional[LastUpdated] = None
    PackageDescription_1: Optional[PackageDescription] = Field(
        None, alias='PackageDescription'
    )
    PackageID_1: Optional[PackageID] = Field(None, alias='PackageID')
    PackageName_1: Optional[PackageName] = Field(None, alias='PackageName')
    PackageStatus_1: Optional[PackageStatus] = Field(None, alias='PackageStatus')
    PackageType_1: Optional[PackageType] = Field(None, alias='PackageType')


class PackageDetailsList(RootModel[List[PackageDetails]]):
    root: List[PackageDetails]


class PurchaseReservedElasticsearchInstanceOfferingRequest(BaseModel):
    InstanceCount_1: Optional[InstanceCount] = Field(None, alias='InstanceCount')
    ReservationName: ReservationToken
    ReservedElasticsearchInstanceOfferingId: GUID


class PurchaseReservedElasticsearchInstanceOfferingResponse(BaseModel):
    ReservationName: Optional[ReservationToken] = None
    ReservedElasticsearchInstanceId: Optional[GUID] = None


class RecurringCharge(BaseModel):
    RecurringChargeAmount: Optional[Double] = None
    RecurringChargeFrequency: Optional[String] = None


class RecurringChargeList(RootModel[List[RecurringCharge]]):
    root: List[RecurringCharge]


class RemoveTagsRequest(BaseModel):
    ARN_1: ARN = Field(..., alias='ARN')
    TagKeys: StringList


class ReservedElasticsearchInstance(BaseModel):
    CurrencyCode: Optional[String] = None
    Duration: Optional[Integer] = None
    ElasticsearchInstanceCount: Optional[Integer] = None
    ElasticsearchInstanceType: Optional[ESPartitionInstanceType] = None
    FixedPrice: Optional[Double] = None
    PaymentOption: Optional[ReservedElasticsearchInstancePaymentOption] = None
    RecurringCharges: Optional[RecurringChargeList] = None
    ReservationName: Optional[ReservationToken] = None
    ReservedElasticsearchInstanceId: Optional[GUID] = None
    ReservedElasticsearchInstanceOfferingId: Optional[String] = None
    StartTime: Optional[UpdateTimestamp] = None
    State: Optional[String] = None
    UsagePrice: Optional[Double] = None


class ReservedElasticsearchInstanceList(RootModel[List[ReservedElasticsearchInstance]]):
    root: List[ReservedElasticsearchInstance]


class ReservedElasticsearchInstanceOffering(BaseModel):
    CurrencyCode: Optional[String] = None
    Duration: Optional[Integer] = None
    ElasticsearchInstanceType: Optional[ESPartitionInstanceType] = None
    FixedPrice: Optional[Double] = None
    PaymentOption: Optional[ReservedElasticsearchInstancePaymentOption] = None
    RecurringCharges: Optional[RecurringChargeList] = None
    ReservedElasticsearchInstanceOfferingId: Optional[GUID] = None
    UsagePrice: Optional[Double] = None


class ReservedElasticsearchInstanceOfferingList(
    RootModel[List[ReservedElasticsearchInstanceOffering]]
):
    root: List[ReservedElasticsearchInstanceOffering]


class SAMLIdp(BaseModel):
    EntityId: SAMLEntityId
    MetadataContent: SAMLMetadata


class SAMLOptionsInput(BaseModel):
    Enabled: Optional[Boolean] = None
    Idp: Optional[SAMLIdp] = None
    MasterBackendRole: Optional[BackendRole] = None
    MasterUserName: Optional[Username] = None
    RolesKey: Optional[String] = None
    SessionTimeoutMinutes: Optional[IntegerClass] = None
    SubjectKey: Optional[String] = None


class SAMLOptionsOutput(BaseModel):
    Enabled: Optional[Boolean] = None
    Idp: Optional[SAMLIdp] = None
    RolesKey: Optional[String] = None
    SessionTimeoutMinutes: Optional[IntegerClass] = None
    SubjectKey: Optional[String] = None


class ScheduledAutoTuneDetails(BaseModel):
    Action: Optional[ScheduledAutoTuneDescription] = None
    ActionType: Optional[ScheduledAutoTuneActionType] = None
    Date: Optional[AutoTuneDate] = None
    Severity: Optional[ScheduledAutoTuneSeverityType] = None


class ServiceSoftwareOptions(BaseModel):
    AutomatedUpdateDate: Optional[DeploymentCloseDateTimeStamp] = None
    Cancellable: Optional[Boolean] = None
    CurrentVersion: Optional[String] = None
    Description: Optional[String] = None
    NewVersion: Optional[String] = None
    OptionalDeployment: Optional[Boolean] = None
    UpdateAvailable: Optional[Boolean] = None
    UpdateStatus: Optional[DeploymentStatus] = None


class SnapshotOptionsStatus(BaseModel):
    Options: SnapshotOptions
    Status: OptionStatus


class StartElasticsearchServiceSoftwareUpdateResponse(BaseModel):
    ServiceSoftwareOptions_1: Optional[ServiceSoftwareOptions] = Field(
        None, alias='ServiceSoftwareOptions'
    )


class StorageType(BaseModel):
    StorageSubTypeName_1: Optional[StorageSubTypeName] = Field(
        None, alias='StorageSubTypeName'
    )
    StorageTypeLimits: Optional[StorageTypeLimitList] = None
    StorageTypeName_1: Optional[StorageTypeName] = Field(None, alias='StorageTypeName')


class StorageTypeList(RootModel[List[StorageType]]):
    root: List[StorageType]


class Tag(BaseModel):
    Key: TagKey
    Value: TagValue


class TagList(RootModel[List[Tag]]):
    root: List[Tag] = Field(..., description='A list of <code>Tag</code> ')


class UpdatePackageRequest(BaseModel):
    CommitMessage_1: Optional[CommitMessage] = Field(None, alias='CommitMessage')
    PackageDescription_1: Optional[PackageDescription] = Field(
        None, alias='PackageDescription'
    )
    PackageID_1: PackageID = Field(..., alias='PackageID')
    PackageSource_1: PackageSource = Field(..., alias='PackageSource')


class UpdatePackageResponse(BaseModel):
    PackageDetails_1: Optional[PackageDetails] = Field(None, alias='PackageDetails')


class UpdateVpcEndpointRequest(BaseModel):
    VpcEndpointId_1: VpcEndpointId = Field(..., alias='VpcEndpointId')
    VpcOptions: VPCOptions


class UpgradeElasticsearchDomainResponse(BaseModel):
    ChangeProgressDetails_1: Optional[ChangeProgressDetails] = Field(
        None, alias='ChangeProgressDetails'
    )
    DomainName_1: Optional[DomainName] = Field(None, alias='DomainName')
    PerformCheckOnly: Optional[Boolean] = None
    TargetVersion: Optional[ElasticsearchVersionString] = None


class UpgradeHistory(BaseModel):
    StartTimestamp_1: Optional[StartTimestamp] = Field(None, alias='StartTimestamp')
    StepsList: Optional[UpgradeStepsList] = None
    UpgradeName_1: Optional[UpgradeName] = Field(None, alias='UpgradeName')
    UpgradeStatus_1: Optional[UpgradeStatus] = Field(None, alias='UpgradeStatus')


class UpgradeHistoryList(RootModel[List[UpgradeHistory]]):
    root: List[UpgradeHistory]


class VPCDerivedInfoStatus(BaseModel):
    Options: VPCDerivedInfo
    Status: OptionStatus


class VpcEndpoint(BaseModel):
    DomainArn_1: Optional[DomainArn] = Field(None, alias='DomainArn')
    Endpoint_1: Optional[Endpoint] = Field(None, alias='Endpoint')
    Status: Optional[VpcEndpointStatus] = None
    VpcEndpointId_1: Optional[VpcEndpointId] = Field(None, alias='VpcEndpointId')
    VpcEndpointOwner: Optional[AWSAccount] = None
    VpcOptions: Optional[VPCDerivedInfo] = None


class VpcEndpointError(BaseModel):
    ErrorCode: Optional[VpcEndpointErrorCode] = None
    ErrorMessage: Optional[String] = None
    VpcEndpointId_1: Optional[VpcEndpointId] = Field(None, alias='VpcEndpointId')


class VpcEndpointErrorList(RootModel[List[VpcEndpointError]]):
    root: List[VpcEndpointError]


class VpcEndpoints(RootModel[List[VpcEndpoint]]):
    root: List[VpcEndpoint]


class Field20150101EsCcsInboundConnectionSearchPostRequest(BaseModel):
    Filters: Optional[List[Filter]] = Field(
        None,
        description=' A list of filters used to match properties for inbound cross-cluster search connection. Available <code><a>Filter</a></code> names for this operation are: <ul> <li>cross-cluster-search-connection-id</li> <li>source-domain-info.domain-name</li> <li>source-domain-info.owner-id</li> <li>source-domain-info.region</li> <li>destination-domain-info.domain-name</li> </ul> ',
    )
    MaxResults: Optional[conint(le=100)] = Field(
        None, description=' Set this value to limit the number of results returned. '
    )
    NextToken: Optional[str] = Field(
        None,
        description=' Paginated APIs accepts NextToken input to returns next page results and provides a NextToken output in the response which can be used by the client to retrieve more results. ',
    )


class Field20150101EsCcsOutboundConnectionSearchPostRequest(BaseModel):
    Filters: Optional[List[Filter]] = Field(
        None,
        description=' A list of filters used to match properties for outbound cross-cluster search connection. Available <code><a>Filter</a></code> names for this operation are: <ul> <li>cross-cluster-search-connection-id</li> <li>destination-domain-info.domain-name</li> <li>destination-domain-info.owner-id</li> <li>destination-domain-info.region</li> <li>source-domain-info.domain-name</li> </ul> ',
    )
    MaxResults: Optional[conint(le=100)] = Field(
        None, description=' Set this value to limit the number of results returned. '
    )
    NextToken: Optional[str] = Field(
        None,
        description=' Paginated APIs accepts NextToken input to returns next page results and provides a NextToken output in the response which can be used by the client to retrieve more results. ',
    )


class AdvancedSecurityOptions1(BaseModel):
    AnonymousAuthEnabled: Optional[Boolean] = None
    Enabled: Optional[Boolean] = None
    InternalUserDatabaseEnabled: Optional[Boolean] = None
    MasterUserOptions_1: Optional[MasterUserOptions] = Field(
        None, alias='MasterUserOptions'
    )
    SAMLOptions: Optional[SAMLOptionsInput] = None


class Field20150101PackagesDescribePostRequest(BaseModel):
    Filters: Optional[List[DescribePackagesFilter]] = Field(
        None,
        description='A list of <code>DescribePackagesFilter</code> to filter the packages included in a <code>DescribePackages</code> response.',
    )
    MaxResults: Optional[conint(le=100)] = Field(
        None, description=' Set this value to limit the number of results returned. '
    )
    NextToken: Optional[str] = Field(
        None,
        description=' Paginated APIs accepts NextToken input to returns next page results and provides a NextToken output in the response which can be used by the client to retrieve more results. ',
    )


class Field20150101TagsPostRequest(BaseModel):
    ARN: str = Field(
        ...,
        description='The Amazon Resource Name (ARN) of the Elasticsearch domain. See <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?Using_Identifiers.html" target="_blank">Identifiers for IAM Entities</a> in <i>Using AWS Identity and Access Management</i> for more information.',
    )
    TagList: List[Tag] = Field(..., description='A list of <code>Tag</code> ')


class AccessPoliciesStatus(BaseModel):
    Options: PolicyDocument
    Status: OptionStatus


class AddTagsRequest(BaseModel):
    ARN_1: ARN = Field(..., alias='ARN')
    TagList_1: TagList = Field(..., alias='TagList')


class AdvancedOptionsStatus(BaseModel):
    Options: AdvancedOptions
    Status: OptionStatus


class AdvancedSecurityOptions(BaseModel):
    AnonymousAuthDisableDate: Optional[DisableTimestamp] = None
    AnonymousAuthEnabled: Optional[Boolean] = None
    Enabled: Optional[Boolean] = None
    InternalUserDatabaseEnabled: Optional[Boolean] = None
    SAMLOptions: Optional[SAMLOptionsOutput] = None


class AdvancedSecurityOptionsInput(BaseModel):
    AnonymousAuthEnabled: Optional[Boolean] = None
    Enabled: Optional[Boolean] = None
    InternalUserDatabaseEnabled: Optional[Boolean] = None
    MasterUserOptions_1: Optional[MasterUserOptions] = Field(
        None, alias='MasterUserOptions'
    )
    SAMLOptions: Optional[SAMLOptionsInput] = None


class AdvancedSecurityOptionsStatus(BaseModel):
    Options: AdvancedSecurityOptions
    Status: OptionStatus


class AuthorizeVpcEndpointAccessResponse(BaseModel):
    AuthorizedPrincipal_1: AuthorizedPrincipal = Field(..., alias='AuthorizedPrincipal')


class AutoTuneDetails(BaseModel):
    ScheduledAutoTuneDetails_1: Optional[ScheduledAutoTuneDetails] = Field(
        None, alias='ScheduledAutoTuneDetails'
    )


class AutoTuneMaintenanceSchedule(BaseModel):
    CronExpressionForRecurrence: Optional[String] = None
    Duration_1: Optional[Duration] = Field(None, alias='Duration')
    StartAt_1: Optional[StartAt] = Field(None, alias='StartAt')


class AutoTuneMaintenanceScheduleList(RootModel[List[AutoTuneMaintenanceSchedule]]):
    root: List[AutoTuneMaintenanceSchedule] = Field(..., max_length=100)


class AutoTuneOptions(BaseModel):
    DesiredState: Optional[AutoTuneDesiredState] = None
    MaintenanceSchedules: Optional[AutoTuneMaintenanceScheduleList] = None
    RollbackOnDisable_1: Optional[RollbackOnDisable] = Field(
        None, alias='RollbackOnDisable'
    )


class AutoTuneOptionsInput(BaseModel):
    DesiredState: Optional[AutoTuneDesiredState] = None
    MaintenanceSchedules: Optional[AutoTuneMaintenanceScheduleList] = None


class AutoTuneOptionsStatus(BaseModel):
    Options: Optional[AutoTuneOptions] = None
    Status: Optional[AutoTuneStatus] = None


class CancelElasticsearchServiceSoftwareUpdateResponse(BaseModel):
    ServiceSoftwareOptions_1: Optional[ServiceSoftwareOptions] = Field(
        None, alias='ServiceSoftwareOptions'
    )


class CognitoOptionsStatus(BaseModel):
    Options: CognitoOptions
    Status: OptionStatus


class CompatibleVersionsMap(BaseModel):
    SourceVersion: Optional[ElasticsearchVersionString] = None
    TargetVersions: Optional[ElasticsearchVersionList] = None


class CreateElasticsearchDomainRequest(BaseModel):
    AccessPolicies: Optional[PolicyDocument] = None
    AdvancedOptions_1: Optional[AdvancedOptions] = Field(None, alias='AdvancedOptions')
    AdvancedSecurityOptions: Optional[AdvancedSecurityOptionsInput] = None
    AutoTuneOptions: Optional[AutoTuneOptionsInput] = None
    CognitoOptions_1: Optional[CognitoOptions] = Field(None, alias='CognitoOptions')
    DomainEndpointOptions_1: Optional[DomainEndpointOptions] = Field(
        None, alias='DomainEndpointOptions'
    )
    DomainName_1: DomainName = Field(..., alias='DomainName')
    EBSOptions_1: Optional[EBSOptions] = Field(None, alias='EBSOptions')
    ElasticsearchClusterConfig_1: Optional[ElasticsearchClusterConfig] = Field(
        None, alias='ElasticsearchClusterConfig'
    )
    ElasticsearchVersion: Optional[ElasticsearchVersionString] = None
    EncryptionAtRestOptions_1: Optional[EncryptionAtRestOptions] = Field(
        None, alias='EncryptionAtRestOptions'
    )
    LogPublishingOptions_1: Optional[LogPublishingOptions] = Field(
        None, alias='LogPublishingOptions'
    )
    NodeToNodeEncryptionOptions_1: Optional[NodeToNodeEncryptionOptions] = Field(
        None, alias='NodeToNodeEncryptionOptions'
    )
    SnapshotOptions_1: Optional[SnapshotOptions] = Field(None, alias='SnapshotOptions')
    TagList_1: Optional[TagList] = Field(None, alias='TagList')
    VPCOptions_1: Optional[VPCOptions] = Field(None, alias='VPCOptions')


class CreateOutboundCrossClusterSearchConnectionRequest(BaseModel):
    ConnectionAlias_1: ConnectionAlias = Field(..., alias='ConnectionAlias')
    DestinationDomainInfo: DomainInformation
    SourceDomainInfo: DomainInformation


class CreateOutboundCrossClusterSearchConnectionResponse(BaseModel):
    ConnectionAlias_1: Optional[ConnectionAlias] = Field(None, alias='ConnectionAlias')
    ConnectionStatus: Optional[OutboundCrossClusterSearchConnectionStatus] = None
    CrossClusterSearchConnectionId_1: Optional[CrossClusterSearchConnectionId] = Field(
        None, alias='CrossClusterSearchConnectionId'
    )
    DestinationDomainInfo: Optional[DomainInformation] = None
    SourceDomainInfo: Optional[DomainInformation] = None


class CreatePackageRequest(BaseModel):
    PackageDescription_1: Optional[PackageDescription] = Field(
        None, alias='PackageDescription'
    )
    PackageName_1: PackageName = Field(..., alias='PackageName')
    PackageSource_1: PackageSource = Field(..., alias='PackageSource')
    PackageType_1: PackageType = Field(..., alias='PackageType')


class CreatePackageResponse(BaseModel):
    PackageDetails_1: Optional[PackageDetails] = Field(None, alias='PackageDetails')


class CreateVpcEndpointResponse(BaseModel):
    VpcEndpoint_1: VpcEndpoint = Field(..., alias='VpcEndpoint')


class DeletePackageResponse(BaseModel):
    PackageDetails_1: Optional[PackageDetails] = Field(None, alias='PackageDetails')


class DescribeInboundCrossClusterSearchConnectionsRequest(BaseModel):
    Filters: Optional[FilterList] = None
    MaxResults_1: Optional[MaxResults] = Field(None, alias='MaxResults')
    NextToken_1: Optional[NextToken] = Field(None, alias='NextToken')


class DescribeOutboundCrossClusterSearchConnectionsRequest(BaseModel):
    Filters: Optional[FilterList] = None
    MaxResults_1: Optional[MaxResults] = Field(None, alias='MaxResults')
    NextToken_1: Optional[NextToken] = Field(None, alias='NextToken')


class DescribePackagesResponse(BaseModel):
    NextToken: Optional[String] = None
    PackageDetailsList_1: Optional[PackageDetailsList] = Field(
        None, alias='PackageDetailsList'
    )


class DescribeReservedElasticsearchInstanceOfferingsResponse(BaseModel):
    NextToken_1: Optional[NextToken] = Field(None, alias='NextToken')
    ReservedElasticsearchInstanceOfferings: Optional[
        ReservedElasticsearchInstanceOfferingList
    ] = None


class DescribeReservedElasticsearchInstancesResponse(BaseModel):
    NextToken: Optional[String] = None
    ReservedElasticsearchInstances: Optional[ReservedElasticsearchInstanceList] = None


class DescribeVpcEndpointsResponse(BaseModel):
    VpcEndpointErrors: VpcEndpointErrorList
    VpcEndpoints_1: VpcEndpoints = Field(..., alias='VpcEndpoints')


class DomainEndpointOptionsStatus(BaseModel):
    Options: DomainEndpointOptions
    Status: OptionStatus


class DomainPackageDetails(BaseModel):
    DomainName_1: Optional[DomainName] = Field(None, alias='DomainName')
    DomainPackageStatus_1: Optional[DomainPackageStatus] = Field(
        None, alias='DomainPackageStatus'
    )
    ErrorDetails_1: Optional[ErrorDetails] = Field(None, alias='ErrorDetails')
    LastUpdated_1: Optional[LastUpdated] = Field(None, alias='LastUpdated')
    PackageID_1: Optional[PackageID] = Field(None, alias='PackageID')
    PackageName_1: Optional[PackageName] = Field(None, alias='PackageName')
    PackageType_1: Optional[PackageType] = Field(None, alias='PackageType')
    PackageVersion_1: Optional[PackageVersion] = Field(None, alias='PackageVersion')
    ReferencePath_1: Optional[ReferencePath] = Field(None, alias='ReferencePath')


class DomainPackageDetailsList(RootModel[List[DomainPackageDetails]]):
    root: List[DomainPackageDetails]


class EBSOptionsStatus(BaseModel):
    Options: EBSOptions
    Status: OptionStatus


class ElasticsearchClusterConfigStatus(BaseModel):
    Options: ElasticsearchClusterConfig
    Status: OptionStatus


class ElasticsearchDomainStatus(BaseModel):
    ARN_1: ARN = Field(..., alias='ARN')
    AccessPolicies: Optional[PolicyDocument] = None
    AdvancedOptions_1: Optional[AdvancedOptions] = Field(None, alias='AdvancedOptions')
    AdvancedSecurityOptions_1: Optional[AdvancedSecurityOptions] = Field(
        None, alias='AdvancedSecurityOptions'
    )
    AutoTuneOptions: Optional[AutoTuneOptionsOutput] = None
    ChangeProgressDetails_1: Optional[ChangeProgressDetails] = Field(
        None, alias='ChangeProgressDetails'
    )
    CognitoOptions_1: Optional[CognitoOptions] = Field(None, alias='CognitoOptions')
    Created: Optional[Boolean] = None
    Deleted: Optional[Boolean] = None
    DomainEndpointOptions_1: Optional[DomainEndpointOptions] = Field(
        None, alias='DomainEndpointOptions'
    )
    DomainId_1: DomainId = Field(..., alias='DomainId')
    DomainName_1: DomainName = Field(..., alias='DomainName')
    EBSOptions_1: Optional[EBSOptions] = Field(None, alias='EBSOptions')
    ElasticsearchClusterConfig_1: ElasticsearchClusterConfig = Field(
        ..., alias='ElasticsearchClusterConfig'
    )
    ElasticsearchVersion: Optional[ElasticsearchVersionString] = None
    EncryptionAtRestOptions_1: Optional[EncryptionAtRestOptions] = Field(
        None, alias='EncryptionAtRestOptions'
    )
    Endpoint: Optional[ServiceUrl] = None
    Endpoints: Optional[EndpointsMap] = None
    LogPublishingOptions_1: Optional[LogPublishingOptions] = Field(
        None, alias='LogPublishingOptions'
    )
    NodeToNodeEncryptionOptions_1: Optional[NodeToNodeEncryptionOptions] = Field(
        None, alias='NodeToNodeEncryptionOptions'
    )
    Processing: Optional[Boolean] = None
    ServiceSoftwareOptions_1: Optional[ServiceSoftwareOptions] = Field(
        None, alias='ServiceSoftwareOptions'
    )
    SnapshotOptions_1: Optional[SnapshotOptions] = Field(None, alias='SnapshotOptions')
    UpgradeProcessing: Optional[Boolean] = None
    VPCOptions: Optional[VPCDerivedInfo] = None


class ElasticsearchDomainStatusList(RootModel[List[ElasticsearchDomainStatus]]):
    root: List[ElasticsearchDomainStatus] = Field(
        ...,
        description='A list that contains the status of each requested Elasticsearch domain.',
    )


class ElasticsearchVersionStatus(BaseModel):
    Options: ElasticsearchVersionString
    Status: OptionStatus


class EncryptionAtRestOptionsStatus(BaseModel):
    Options: EncryptionAtRestOptions
    Status: OptionStatus


class GetUpgradeHistoryResponse(BaseModel):
    NextToken: Optional[String] = None
    UpgradeHistories: Optional[UpgradeHistoryList] = None


class InboundCrossClusterSearchConnection(BaseModel):
    ConnectionStatus: Optional[InboundCrossClusterSearchConnectionStatus] = None
    CrossClusterSearchConnectionId_1: Optional[CrossClusterSearchConnectionId] = Field(
        None, alias='CrossClusterSearchConnectionId'
    )
    DestinationDomainInfo: Optional[DomainInformation] = None
    SourceDomainInfo: Optional[DomainInformation] = None


class InboundCrossClusterSearchConnections(
    RootModel[List[InboundCrossClusterSearchConnection]]
):
    root: List[InboundCrossClusterSearchConnection]


class Limits(BaseModel):
    AdditionalLimits: Optional[AdditionalLimitList] = None
    InstanceLimits_1: Optional[InstanceLimits] = Field(None, alias='InstanceLimits')
    StorageTypes: Optional[StorageTypeList] = None


class LimitsByRole(RootModel[Optional[Dict[str, Limits]]]):
    root: Optional[Dict[str, Limits]] = None


class ListDomainsForPackageResponse(BaseModel):
    DomainPackageDetailsList_1: Optional[DomainPackageDetailsList] = Field(
        None, alias='DomainPackageDetailsList'
    )
    NextToken: Optional[String] = None


class ListPackagesForDomainResponse(BaseModel):
    DomainPackageDetailsList_1: Optional[DomainPackageDetailsList] = Field(
        None, alias='DomainPackageDetailsList'
    )
    NextToken: Optional[String] = None


class ListTagsResponse(BaseModel):
    TagList_1: Optional[TagList] = Field(None, alias='TagList')


class LogPublishingOptionsStatus(BaseModel):
    Options: Optional[LogPublishingOptions] = None
    Status: Optional[OptionStatus] = None


class NodeToNodeEncryptionOptionsStatus(BaseModel):
    Options: NodeToNodeEncryptionOptions
    Status: OptionStatus


class OutboundCrossClusterSearchConnection(BaseModel):
    ConnectionAlias_1: Optional[ConnectionAlias] = Field(None, alias='ConnectionAlias')
    ConnectionStatus: Optional[OutboundCrossClusterSearchConnectionStatus] = None
    CrossClusterSearchConnectionId_1: Optional[CrossClusterSearchConnectionId] = Field(
        None, alias='CrossClusterSearchConnectionId'
    )
    DestinationDomainInfo: Optional[DomainInformation] = None
    SourceDomainInfo: Optional[DomainInformation] = None


class OutboundCrossClusterSearchConnections(
    RootModel[List[OutboundCrossClusterSearchConnection]]
):
    root: List[OutboundCrossClusterSearchConnection]


class RejectInboundCrossClusterSearchConnectionResponse(BaseModel):
    CrossClusterSearchConnection: Optional[InboundCrossClusterSearchConnection] = None


class UpdateElasticsearchDomainConfigRequest(BaseModel):
    AccessPolicies: Optional[PolicyDocument] = None
    AdvancedOptions_1: Optional[AdvancedOptions] = Field(None, alias='AdvancedOptions')
    AdvancedSecurityOptions: Optional[AdvancedSecurityOptionsInput] = None
    AutoTuneOptions_1: Optional[AutoTuneOptions] = Field(None, alias='AutoTuneOptions')
    CognitoOptions_1: Optional[CognitoOptions] = Field(None, alias='CognitoOptions')
    DomainEndpointOptions_1: Optional[DomainEndpointOptions] = Field(
        None, alias='DomainEndpointOptions'
    )
    DryRun_1: Optional[DryRun] = Field(None, alias='DryRun')
    EBSOptions_1: Optional[EBSOptions] = Field(None, alias='EBSOptions')
    ElasticsearchClusterConfig_1: Optional[ElasticsearchClusterConfig] = Field(
        None, alias='ElasticsearchClusterConfig'
    )
    EncryptionAtRestOptions_1: Optional[EncryptionAtRestOptions] = Field(
        None, alias='EncryptionAtRestOptions'
    )
    LogPublishingOptions_1: Optional[LogPublishingOptions] = Field(
        None, alias='LogPublishingOptions'
    )
    NodeToNodeEncryptionOptions_1: Optional[NodeToNodeEncryptionOptions] = Field(
        None, alias='NodeToNodeEncryptionOptions'
    )
    SnapshotOptions_1: Optional[SnapshotOptions] = Field(None, alias='SnapshotOptions')
    VPCOptions_1: Optional[VPCOptions] = Field(None, alias='VPCOptions')


class UpdateVpcEndpointResponse(BaseModel):
    VpcEndpoint_1: VpcEndpoint = Field(..., alias='VpcEndpoint')


class AutoTuneOptions1(BaseModel):
    DesiredState: Optional[AutoTuneDesiredState] = None
    MaintenanceSchedules: Optional[AutoTuneMaintenanceScheduleList] = None


class Field20150101EsDomainPostRequest(BaseModel):
    AccessPolicies: Optional[str] = Field(
        None,
        description='Access policy rules for an Elasticsearch domain service endpoints. For more information, see <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createupdatedomains.html#es-createdomain-configure-access-policies" target="_blank">Configuring Access Policies</a> in the <i>Amazon Elasticsearch Service Developer Guide</i>. The maximum size of a policy document is 100 KB.',
    )
    AdvancedOptions: Optional[Dict[str, String]] = Field(
        None,
        description='<p> Exposes select native Elasticsearch configuration values from <code>elasticsearch.yml</code>. Currently, the following advanced options are available:</p> <ul> <li>Option to allow references to indices in an HTTP request body. Must be <code>false</code> when configuring access to individual sub-resources. By default, the value is <code>true</code>. See <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createupdatedomains.html#es-createdomain-configure-advanced-options" target="_blank">Configuration Advanced Options</a> for more information.</li> <li>Option to specify the percentage of heap space that is allocated to field data. By default, this setting is unbounded.</li> </ul> <p>For more information, see <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createupdatedomains.html#es-createdomain-configure-advanced-options">Configuring Advanced Options</a>.</p>',
    )
    AdvancedSecurityOptions: Optional[AdvancedSecurityOptions1] = Field(
        None,
        description='Specifies the advanced security configuration: whether advanced security is enabled, whether the internal database option is enabled, master username and password (if internal database is enabled), and master user ARN (if IAM is enabled).',
    )
    AutoTuneOptions: Optional[AutoTuneOptions1] = Field(
        None,
        description='Specifies the Auto-Tune options: the Auto-Tune desired state for the domain and list of maintenance schedules.',
    )
    CognitoOptions_1: Optional[CognitoOptions] = Field(
        None,
        alias='CognitoOptions',
        description='Options to specify the Cognito user and identity pools for Kibana authentication. For more information, see <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-cognito-auth.html" target="_blank">Amazon Cognito Authentication for Kibana</a>.',
    )
    DomainEndpointOptions_1: Optional[DomainEndpointOptions] = Field(
        None,
        alias='DomainEndpointOptions',
        description='Options to configure endpoint for the Elasticsearch domain.',
    )
    DomainName: constr(pattern=r'[a-z][a-z0-9\-]+', min_length=3, max_length=28) = (
        Field(
            ...,
            description='The name of an Elasticsearch domain. Domain names are unique across the domains owned by an account within an AWS region. Domain names start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen).',
        )
    )
    EBSOptions_1: Optional[EBSOptions] = Field(
        None,
        alias='EBSOptions',
        description='Options to enable, disable, and specify the properties of EBS storage volumes. For more information, see <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createupdatedomains.html#es-createdomain-configure-ebs" target="_blank"> Configuring EBS-based Storage</a>.',
    )
    ElasticsearchClusterConfig_1: Optional[ElasticsearchClusterConfig] = Field(
        None,
        alias='ElasticsearchClusterConfig',
        description='Specifies the configuration for the domain cluster, such as the type and number of instances.',
    )
    ElasticsearchVersion: Optional[
        constr(pattern=r'^[0-9]{1}\.[0-9]{1,2}$|^OpenSearch_[0-9]{1,2}\.[0-9]{1,2}$')
    ] = Field(
        None,
        description='String of format X.Y to specify version for the Elasticsearch domain eg. "1.5" or "2.3". For more information, see <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createupdatedomains.html#es-createdomains" target="_blank">Creating Elasticsearch Domains</a> in the <i>Amazon Elasticsearch Service Developer Guide</i>.',
    )
    EncryptionAtRestOptions_1: Optional[EncryptionAtRestOptions] = Field(
        None,
        alias='EncryptionAtRestOptions',
        description='Specifies the Encryption At Rest Options.',
    )
    LogPublishingOptions: Optional[Dict[str, LogPublishingOption]] = Field(
        None,
        description='Map of <code>LogType</code> and <code>LogPublishingOption</code>, each containing options to publish a given type of Elasticsearch log.',
    )
    NodeToNodeEncryptionOptions_1: Optional[NodeToNodeEncryptionOptions] = Field(
        None,
        alias='NodeToNodeEncryptionOptions',
        description='Specifies the node-to-node encryption options.',
    )
    SnapshotOptions_1: Optional[SnapshotOptions] = Field(
        None,
        alias='SnapshotOptions',
        description='Specifies the time, in UTC format, when the service takes a daily automated snapshot of the specified Elasticsearch domain. Default value is <code>0</code> hours.',
    )
    TagList: Optional[List[Tag]] = Field(
        None, description='A list of <code>Tag</code> '
    )
    VPCOptions_1: Optional[VPCOptions] = Field(
        None,
        alias='VPCOptions',
        description='Options to specify the subnets and security groups for VPC endpoint. For more information, see <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-vpc.html" target="_blank"> VPC Endpoints for Amazon Elasticsearch Service Domains</a>.',
    )


class AutoTuneOptions2(BaseModel):
    DesiredState: Optional[AutoTuneDesiredState] = None
    MaintenanceSchedules: Optional[AutoTuneMaintenanceScheduleList] = None
    RollbackOnDisable_1: Optional[RollbackOnDisable] = Field(
        None, alias='RollbackOnDisable'
    )


class Field20150101EsDomainDomainNameConfigPostRequest(BaseModel):
    AccessPolicies: Optional[str] = Field(
        None,
        description='Access policy rules for an Elasticsearch domain service endpoints. For more information, see <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createupdatedomains.html#es-createdomain-configure-access-policies" target="_blank">Configuring Access Policies</a> in the <i>Amazon Elasticsearch Service Developer Guide</i>. The maximum size of a policy document is 100 KB.',
    )
    AdvancedOptions: Optional[Dict[str, String]] = Field(
        None,
        description='<p> Exposes select native Elasticsearch configuration values from <code>elasticsearch.yml</code>. Currently, the following advanced options are available:</p> <ul> <li>Option to allow references to indices in an HTTP request body. Must be <code>false</code> when configuring access to individual sub-resources. By default, the value is <code>true</code>. See <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createupdatedomains.html#es-createdomain-configure-advanced-options" target="_blank">Configuration Advanced Options</a> for more information.</li> <li>Option to specify the percentage of heap space that is allocated to field data. By default, this setting is unbounded.</li> </ul> <p>For more information, see <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createupdatedomains.html#es-createdomain-configure-advanced-options">Configuring Advanced Options</a>.</p>',
    )
    AdvancedSecurityOptions: Optional[AdvancedSecurityOptions1] = Field(
        None,
        description='Specifies the advanced security configuration: whether advanced security is enabled, whether the internal database option is enabled, master username and password (if internal database is enabled), and master user ARN (if IAM is enabled).',
    )
    AutoTuneOptions: Optional[AutoTuneOptions2] = Field(
        None,
        description='Specifies the Auto-Tune options: the Auto-Tune desired state for the domain, rollback state when disabling Auto-Tune options and list of maintenance schedules.',
    )
    CognitoOptions_1: Optional[CognitoOptions] = Field(
        None,
        alias='CognitoOptions',
        description='Options to specify the Cognito user and identity pools for Kibana authentication. For more information, see <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-cognito-auth.html" target="_blank">Amazon Cognito Authentication for Kibana</a>.',
    )
    DomainEndpointOptions_1: Optional[DomainEndpointOptions] = Field(
        None,
        alias='DomainEndpointOptions',
        description='Options to configure endpoint for the Elasticsearch domain.',
    )
    DryRun: Optional[bool] = Field(
        None,
        description=' This flag, when set to True, specifies whether the <code>UpdateElasticsearchDomain</code> request should return the results of validation checks without actually applying the change. This flag, when set to True, specifies the deployment mechanism through which the update shall be applied on the domain. This will not actually perform the Update. ',
    )
    EBSOptions_1: Optional[EBSOptions] = Field(
        None,
        alias='EBSOptions',
        description='Options to enable, disable, and specify the properties of EBS storage volumes. For more information, see <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createupdatedomains.html#es-createdomain-configure-ebs" target="_blank"> Configuring EBS-based Storage</a>.',
    )
    ElasticsearchClusterConfig_1: Optional[ElasticsearchClusterConfig] = Field(
        None,
        alias='ElasticsearchClusterConfig',
        description='Specifies the configuration for the domain cluster, such as the type and number of instances.',
    )
    EncryptionAtRestOptions_1: Optional[EncryptionAtRestOptions] = Field(
        None,
        alias='EncryptionAtRestOptions',
        description='Specifies the Encryption At Rest Options.',
    )
    LogPublishingOptions: Optional[Dict[str, LogPublishingOption]] = Field(
        None,
        description='Map of <code>LogType</code> and <code>LogPublishingOption</code>, each containing options to publish a given type of Elasticsearch log.',
    )
    NodeToNodeEncryptionOptions_1: Optional[NodeToNodeEncryptionOptions] = Field(
        None,
        alias='NodeToNodeEncryptionOptions',
        description='Specifies the node-to-node encryption options.',
    )
    SnapshotOptions_1: Optional[SnapshotOptions] = Field(
        None,
        alias='SnapshotOptions',
        description='Specifies the time, in UTC format, when the service takes a daily automated snapshot of the specified Elasticsearch domain. Default value is <code>0</code> hours.',
    )
    VPCOptions_1: Optional[VPCOptions] = Field(
        None,
        alias='VPCOptions',
        description='Options to specify the subnets and security groups for VPC endpoint. For more information, see <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-vpc.html" target="_blank"> VPC Endpoints for Amazon Elasticsearch Service Domains</a>.',
    )


class AcceptInboundCrossClusterSearchConnectionResponse(BaseModel):
    CrossClusterSearchConnection: Optional[InboundCrossClusterSearchConnection] = None


class AssociatePackageResponse(BaseModel):
    DomainPackageDetails_1: Optional[DomainPackageDetails] = Field(
        None, alias='DomainPackageDetails'
    )


class AutoTune(BaseModel):
    AutoTuneDetails_1: Optional[AutoTuneDetails] = Field(None, alias='AutoTuneDetails')
    AutoTuneType_1: Optional[AutoTuneType] = Field(None, alias='AutoTuneType')


class AutoTuneList(RootModel[List[AutoTune]]):
    root: List[AutoTune]


class CompatibleElasticsearchVersionsList(RootModel[List[CompatibleVersionsMap]]):
    root: List[CompatibleVersionsMap]


class CreateElasticsearchDomainResponse(BaseModel):
    DomainStatus: Optional[ElasticsearchDomainStatus] = None


class DeleteElasticsearchDomainResponse(BaseModel):
    DomainStatus: Optional[ElasticsearchDomainStatus] = None


class DeleteInboundCrossClusterSearchConnectionResponse(BaseModel):
    CrossClusterSearchConnection: Optional[InboundCrossClusterSearchConnection] = None


class DeleteOutboundCrossClusterSearchConnectionResponse(BaseModel):
    CrossClusterSearchConnection: Optional[OutboundCrossClusterSearchConnection] = None


class DescribeDomainAutoTunesResponse(BaseModel):
    AutoTunes: Optional[AutoTuneList] = None
    NextToken_1: Optional[NextToken] = Field(None, alias='NextToken')


class DescribeElasticsearchDomainResponse(BaseModel):
    DomainStatus: ElasticsearchDomainStatus


class DescribeElasticsearchDomainsResponse(BaseModel):
    DomainStatusList: ElasticsearchDomainStatusList


class DescribeElasticsearchInstanceTypeLimitsResponse(BaseModel):
    LimitsByRole_1: Optional[LimitsByRole] = Field(None, alias='LimitsByRole')


class DescribeInboundCrossClusterSearchConnectionsResponse(BaseModel):
    CrossClusterSearchConnections: Optional[InboundCrossClusterSearchConnections] = None
    NextToken_1: Optional[NextToken] = Field(None, alias='NextToken')


class DescribeOutboundCrossClusterSearchConnectionsResponse(BaseModel):
    CrossClusterSearchConnections: Optional[OutboundCrossClusterSearchConnections] = (
        None
    )
    NextToken_1: Optional[NextToken] = Field(None, alias='NextToken')


class DissociatePackageResponse(BaseModel):
    DomainPackageDetails_1: Optional[DomainPackageDetails] = Field(
        None, alias='DomainPackageDetails'
    )


class ElasticsearchDomainConfig(BaseModel):
    AccessPolicies: Optional[AccessPoliciesStatus] = None
    AdvancedOptions: Optional[AdvancedOptionsStatus] = None
    AdvancedSecurityOptions: Optional[AdvancedSecurityOptionsStatus] = None
    AutoTuneOptions: Optional[AutoTuneOptionsStatus] = None
    ChangeProgressDetails_1: Optional[ChangeProgressDetails] = Field(
        None, alias='ChangeProgressDetails'
    )
    CognitoOptions: Optional[CognitoOptionsStatus] = None
    DomainEndpointOptions: Optional[DomainEndpointOptionsStatus] = None
    EBSOptions: Optional[EBSOptionsStatus] = None
    ElasticsearchClusterConfig: Optional[ElasticsearchClusterConfigStatus] = None
    ElasticsearchVersion: Optional[ElasticsearchVersionStatus] = None
    EncryptionAtRestOptions: Optional[EncryptionAtRestOptionsStatus] = None
    LogPublishingOptions: Optional[LogPublishingOptionsStatus] = None
    NodeToNodeEncryptionOptions: Optional[NodeToNodeEncryptionOptionsStatus] = None
    SnapshotOptions: Optional[SnapshotOptionsStatus] = None
    VPCOptions: Optional[VPCDerivedInfoStatus] = None


class GetCompatibleElasticsearchVersionsResponse(BaseModel):
    CompatibleElasticsearchVersions: Optional[CompatibleElasticsearchVersionsList] = (
        None
    )


class UpdateElasticsearchDomainConfigResponse(BaseModel):
    DomainConfig: ElasticsearchDomainConfig
    DryRunResults_1: Optional[DryRunResults] = Field(None, alias='DryRunResults')


class DescribeElasticsearchDomainConfigResponse(BaseModel):
    DomainConfig: ElasticsearchDomainConfig
